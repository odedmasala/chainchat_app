name: Secret Scanning

on:
  workflow_call:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: "0 3 * * 2"

jobs:
  secret-detection:
    name: Secret Detection
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔍 TruffleHog OSS Secret Scanner
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD
          extra_args: --debug --only-verified

      - name: 🔑 GitLeaks Secret Scanner
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}

      - name: 📊 Generate secrets summary
        if: always()
        run: |
          echo "## 🔍 Secret Scanning Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔍 TruffleHog Scanner" >> $GITHUB_STEP_SUMMARY
          echo "- Scanned for verified secrets in codebase" >> $GITHUB_STEP_SUMMARY
          echo "- Analyzed commit history for leaked credentials" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔑 GitLeaks Scanner" >> $GITHUB_STEP_SUMMARY
          echo "- Performed comprehensive secret detection" >> $GITHUB_STEP_SUMMARY
          echo "- Checked for common secret patterns" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📋 Scan Coverage" >> $GITHUB_STEP_SUMMARY
          echo "- API keys and tokens" >> $GITHUB_STEP_SUMMARY
          echo "- Database connection strings" >> $GITHUB_STEP_SUMMARY
          echo "- Private keys and certificates" >> $GITHUB_STEP_SUMMARY
          echo "- Cloud service credentials" >> $GITHUB_STEP_SUMMARY
          echo "- Generic secrets and passwords" >> $GITHUB_STEP_SUMMARY

      - name: 🚨 Create security issue if secrets found
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            const title = '🚨 Secrets Detected in Repository';
            const body = `
            ## 🔐 Secret Detection Alert

            Our automated secret scanning has detected potential secrets or credentials in the repository.

            **⚠️ IMMEDIATE ACTION REQUIRED**

            **Scan Details:**
            - **Commit**: ${{ github.sha }}
            - **Branch**: ${{ github.ref }}
            - **Workflow**: ${{ github.workflow }}
            - **Run ID**: ${{ github.run_id }}

            **🔧 Remediation Steps:**
            1. **Immediate**: Rotate/revoke any exposed credentials
            2. **Review**: Check the workflow logs for specific findings
            3. **Remove**: Remove secrets from code and commit history if needed
            4. **Secure**: Use GitHub Secrets or secure vault solutions
            5. **Prevent**: Add .gitignore rules for sensitive files

            **📋 Best Practices:**
            - Never commit API keys, passwords, or tokens
            - Use environment variables and GitHub Secrets
            - Implement pre-commit hooks for secret detection
            - Regular security audits and secret rotation

            **🔍 Scanners Used:**
            - TruffleHog (verified secrets detection)
            - GitLeaks (comprehensive pattern matching)

            This issue will be automatically closed when no secrets are detected.
            `;

            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['security', 'secrets', 'critical'],
              state: 'open'
            });

            if (issues.data.length === 0) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: title,
                body: body,
                labels: ['security', 'secrets', 'critical', 'automated']
              });
            }

  summary:
    name: Secret Scan Summary
    runs-on: ubuntu-latest
    needs: secret-detection
    if: always()

    steps:
      - name: ✅ No Secrets Found
        if: needs.secret-detection.result == 'success'
        run: |
          echo "## ✅ Secret Scanning Complete! 🔐" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🎉 **No secrets detected in the repository!**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Your codebase is clean of exposed credentials." >> $GITHUB_STEP_SUMMARY

      - name: 🚨 Secrets Detected
        if: needs.secret-detection.result != 'success'
        run: |
          echo "## 🚨 SECRETS DETECTED! 🔐" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "⚠️ **CRITICAL: Potential secrets found in the repository**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Immediate actions required:**" >> $GITHUB_STEP_SUMMARY
          echo "1. Review the scan results above" >> $GITHUB_STEP_SUMMARY
          echo "2. Rotate any exposed credentials immediately" >> $GITHUB_STEP_SUMMARY
          echo "3. Remove secrets from the codebase" >> $GITHUB_STEP_SUMMARY
          echo "4. Implement proper secret management" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Status:** ${{ needs.secret-detection.result }}" >> $GITHUB_STEP_SUMMARY
          exit 1
