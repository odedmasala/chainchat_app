name: ChainChat Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
  schedule:
    - cron: "0 6 * * 1" # Weekly security scan every Monday at 6 AM UTC

permissions:
  contents: read
  security-events: write
  issues: write
  actions: read

jobs:
  code-quality:
    name: Code Quality & Testing
    uses: ./.github/workflows/code-quality.yml
    secrets: inherit

  security:
    name: Security Analysis
    uses: ./.github/workflows/security.yml
    secrets: inherit
    permissions:
      contents: read
      issues: write

  vulnerability-scan:
    name: Vulnerability Scanning
    uses: ./.github/workflows/vulnerability-scan.yml
    secrets: inherit
    permissions:
      actions: read
      contents: read
      security-events: write

  final-summary:
    name: Pipeline Summary
    runs-on: ubuntu-latest
    needs: [code-quality, security, vulnerability-scan]
    if: always()

    steps:
      - name: Generate comprehensive summary
        run: |
          echo "# Security Pipeline Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Pipeline Status Overview" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Component | Status | Result |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------|--------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Code Quality & Testing | ${{ needs.code-quality.result }} | ${{ needs.code-quality.result == 'success' && 'PASS: Unit & Integration tests passed' || 'FAIL: Tests or quality checks failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Security Analysis | ${{ needs.security.result }} | ${{ needs.security.result == 'success' && 'PASS: Security analysis clean' || 'INFO: Items for review' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Vulnerability Scanning | ${{ needs.vulnerability-scan.result }} | ${{ needs.vulnerability-scan.result == 'success' && 'PASS: No vulnerabilities' || 'WARN: Issues found' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [[ "${{ needs.code-quality.result }}" == "success" && "${{ needs.vulnerability-scan.result }}" == "success" ]]; then
            echo "## OVERALL STATUS: SECURE & READY" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**All security checks passed successfully!**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "- Unit & Integration tests: PASSED" >> $GITHUB_STEP_SUMMARY
            echo "- Code quality checks: PASSED" >> $GITHUB_STEP_SUMMARY
            echo "- Security analysis: ANALYZED" >> $GITHUB_STEP_SUMMARY
            echo "- Vulnerability scanning: SECURE" >> $GITHUB_STEP_SUMMARY
            echo "- Dependencies: SAFE" >> $GITHUB_STEP_SUMMARY
          else
            echo "## OVERALL STATUS: ATTENTION REQUIRED" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Some security checks require attention.**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Please review the individual workflow results and address any issues found." >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Review Guidelines:**" >> $GITHUB_STEP_SUMMARY
            echo "- Check each failed/warning component above" >> $GITHUB_STEP_SUMMARY
            echo "- Download and review security reports from artifacts" >> $GITHUB_STEP_SUMMARY
            echo "- Address critical and high-severity issues first" >> $GITHUB_STEP_SUMMARY
            echo "- Re-run the pipeline after fixes" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Success notification
        if: ${{ needs.code-quality.result == 'success' && needs.vulnerability-scan.result == 'success' }}
        run: |
          echo "SUCCESS: Core pipeline checks passed!"
          echo "Unit & Integration Tests: PASSED"
          echo "Code Quality: PASSED"
          echo "Vulnerability Scan: SECURE"
          echo "Security Analysis: ${{ needs.security.result }}"
          echo "Repository is ready for deployment!"

      - name: Failure notification
        if: ${{ needs.code-quality.result != 'success' || needs.vulnerability-scan.result != 'success' }}
        run: |
          echo "PIPELINE FAILED: Critical issues detected!"
          echo "Results Summary:"
          echo "   Code Quality: ${{ needs.code-quality.result }}"
          echo "   Vulnerability Scan: ${{ needs.vulnerability-scan.result }}"
          echo "   Security Analysis: ${{ needs.security.result }} (informational)"
          echo ""
          echo "Please review the individual workflow logs and address critical issues before proceeding."
          exit 1
