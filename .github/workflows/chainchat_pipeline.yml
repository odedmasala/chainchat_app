name: ChainChat Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
  schedule:
    - cron: "0 6 * * 1" # Weekly security scan every Monday at 6 AM UTC

permissions:
  contents: read

jobs:
  code-quality:
    name: Code Quality & Testing
    uses: ./.github/workflows/code-quality.yml
    secrets: inherit

  security-scan:
    name: Security Analysis
    uses: ./.github/workflows/security-scan.yml
    secrets: inherit
    permissions:
      contents: read
      issues: write

  vulnerability-scan:
    name: Vulnerability Scanning
    uses: ./.github/workflows/vulnerability-scan.yml
    secrets: inherit
    permissions:
      actions: read
      contents: read
      security-events: write

  secret-scan:
    name: Secret Detection
    uses: ./.github/workflows/secret-scan.yml
    secrets: inherit
    permissions:
      contents: read
      issues: write

  ci-security:
    name: CI/CD Security
    uses: ./.github/workflows/ci-security.yml
    secrets: inherit
    permissions:
      actions: read
      contents: read
      security-events: write
      issues: write

  docker-security:
    name: Docker Security Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build and scan Docker image
        run: |
          if [ -f Dockerfile ]; then
            echo "Building Docker image..."
            docker build -t chainchat-app:latest .
            
            echo "Scanning Docker image for vulnerabilities..."
            docker run --rm -v /var/run/docker.sock:/var/run/docker.sock \
              aquasec/trivy image chainchat-app:latest
          else
            echo "WARNING: No Dockerfile found, skipping Docker security scan"
          fi

  final-summary:
    name: Pipeline Summary
    runs-on: ubuntu-latest
    needs:
      [
        code-quality,
        security-scan,
        vulnerability-scan,
        secret-scan,
        ci-security,
        docker-security,
      ]
    if: always()

    steps:
      - name: Generate comprehensive summary
        run: |
          echo "# Security Pipeline Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Pipeline Status Overview" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Component | Status | Result |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------|--------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Code Quality & Testing | ${{ needs.code-quality.result }} | ${{ needs.code-quality.result == 'success' && 'PASS: Unit & Integration tests passed' || 'FAIL: Tests or quality checks failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Security Analysis | ${{ needs.security-scan.result }} | ${{ needs.security-scan.result == 'success' && 'PASS: No security issues' || 'WARN: Attention required' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Vulnerability Scanning | ${{ needs.vulnerability-scan.result }} | ${{ needs.vulnerability-scan.result == 'success' && 'PASS: No vulnerabilities' || 'WARN: Issues found' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Secret Detection | ${{ needs.secret-scan.result }} | ${{ needs.secret-scan.result == 'success' && 'PASS: No secrets found' || 'ALERT: Secrets detected' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| CI/CD Security | ${{ needs.ci-security.result }} | ${{ needs.ci-security.result == 'success' && 'PASS: Workflows secure' || 'WARN: Issues found' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Docker Security | ${{ needs.docker-security.result }} | ${{ needs.docker-security.result == 'success' && 'PASS: Docker secure' || needs.docker-security.result == 'skipped' && 'SKIP: Skipped' || 'WARN: Issues found' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [[ "${{ needs.code-quality.result }}" == "success" && "${{ needs.security-scan.result }}" == "success" && "${{ needs.vulnerability-scan.result }}" == "success" && "${{ needs.secret-scan.result }}" == "success" && "${{ needs.ci-security.result }}" == "success" ]]; then
            echo "## OVERALL STATUS: SECURE & READY" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**All security checks passed successfully!**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "- Unit & Integration tests: PASSED" >> $GITHUB_STEP_SUMMARY
            echo "- Code quality checks: PASSED" >> $GITHUB_STEP_SUMMARY
            echo "- Security analysis: CLEAN" >> $GITHUB_STEP_SUMMARY
            echo "- Vulnerability scanning: SECURE" >> $GITHUB_STEP_SUMMARY
            echo "- Secret detection: NO LEAKS" >> $GITHUB_STEP_SUMMARY
            echo "- CI/CD security: VALIDATED" >> $GITHUB_STEP_SUMMARY
            echo "- Dependencies: SAFE" >> $GITHUB_STEP_SUMMARY
          else
            echo "## OVERALL STATUS: ATTENTION REQUIRED" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Some security checks require attention.**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Please review the individual workflow results and address any issues found." >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Review Guidelines:**" >> $GITHUB_STEP_SUMMARY
            echo "- Check each failed/warning component above" >> $GITHUB_STEP_SUMMARY
            echo "- Download and review security reports from artifacts" >> $GITHUB_STEP_SUMMARY
            echo "- Address critical and high-severity issues first" >> $GITHUB_STEP_SUMMARY
            echo "- Re-run the pipeline after fixes" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Success notification
        if: ${{ needs.code-quality.result == 'success' && needs.security-scan.result == 'success' && needs.vulnerability-scan.result == 'success' && needs.secret-scan.result == 'success' && needs.ci-security.result == 'success' }}
        run: |
          echo "SUCCESS: All security pipeline checks passed!"
          echo "Unit & Integration Tests: PASSED"
          echo "Code Quality: PASSED"
          echo "Security Analysis: CLEAN"  
          echo "Vulnerability Scan: SECURE"
          echo "Secret Detection: NO LEAKS"
          echo "CI/CD Security: VALIDATED"
          echo "Repository is secure and ready for deployment!"

      - name: Failure notification
        if: ${{ needs.code-quality.result != 'success' || needs.security-scan.result != 'success' || needs.vulnerability-scan.result != 'success' || needs.secret-scan.result != 'success' || needs.ci-security.result != 'success' }}
        run: |
          echo "PIPELINE FAILED: Security issues detected!"
          echo "Results Summary:"
          echo "   Code Quality: ${{ needs.code-quality.result }}"
          echo "   Security Scan: ${{ needs.security-scan.result }}"
          echo "   Vulnerability Scan: ${{ needs.vulnerability-scan.result }}"
          echo "   Secret Detection: ${{ needs.secret-scan.result }}"
          echo "   CI/CD Security: ${{ needs.ci-security.result }}"
          echo ""
          echo "Please review the individual workflow logs and address issues before proceeding."
          exit 1
